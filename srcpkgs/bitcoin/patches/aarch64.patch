From 14337d0d80b5a4cb2674a8a3a44dfb7b30370c70 Mon Sep 17 00:00:00 2001
From: Luke Dashjr <luke-jr+git@utopios.org>
Date: Sat, 28 Jul 2018 19:32:41 +0000
Subject: [PATCH] crypto/sha256: Use pragmas to enforce necessary intrinsics
 for GCC and Clang

This avoids problems when the user specifies CXXFLAGS explicitly disabling the relevant optimisations.
---
 src/crypto/sha256_avx2.cpp  | 10 ++++++++++
 src/crypto/sha256_shani.cpp | 10 ++++++++++
 src/crypto/sha256_sse41.cpp | 10 ++++++++++
 3 files changed, 30 insertions(+)

diff --git src/crypto/sha256_avx2.cpp src/crypto/sha256_avx2.cpp
index 624bdb42e474..adddf4338a71 100644
--- src/crypto/sha256_avx2.cpp
+++ src/crypto/sha256_avx2.cpp
@@ -9,6 +9,12 @@
 
 #include <crypto/common.h>
 
+#if defined(__clang__)
+#pragma clang attribute push(__attribute__((__target__("avx,avx2"))), apply_to = function)
+#elif defined(__GNUC__)
+#pragma GCC target ("avx,avx2")
+#endif
+
 namespace sha256d64_avx2 {
 namespace {
 
@@ -325,4 +331,8 @@ void Transform_8way(unsigned char* out, const unsigned char* in)
 
 }
 
+#if defined(__clang__)
+#pragma clang attribute pop
+#endif
+
 #endif
diff --git src/crypto/sha256_shani.cpp src/crypto/sha256_shani.cpp
index 3473f6e39f34..42957a9e1e35 100644
--- src/crypto/sha256_shani.cpp
+++ src/crypto/sha256_shani.cpp
@@ -11,6 +11,12 @@
 #include <stdint.h>
 #include <immintrin.h>
 
+#if defined(__clang__)
+#pragma clang attribute push(__attribute__((__target__("sse4,sha"))), apply_to = function)
+#elif defined(__GNUC__)
+#pragma GCC target ("sse4,sha")
+#endif
+
 namespace {
 
 alignas(__m128i) const uint8_t MASK[16] = {0x03, 0x02, 0x01, 0x00, 0x07, 0x06, 0x05, 0x04, 0x0b, 0x0a, 0x09, 0x08, 0x0f, 0x0e, 0x0d, 0x0c};
@@ -353,4 +359,8 @@ void Transform_2way(unsigned char* out, const unsigned char* in)
 
 }
 
+#if defined(__clang__)
+#pragma clang attribute pop
+#endif
+
 #endif
diff --git src/crypto/sha256_sse41.cpp src/crypto/sha256_sse41.cpp
index 4eaf7d7b188c..000132fcf6f2 100644
--- src/crypto/sha256_sse41.cpp
+++ src/crypto/sha256_sse41.cpp
@@ -9,6 +9,12 @@
 
 #include <crypto/common.h>
 
+#if defined(__clang__)
+#pragma clang attribute push(__attribute__((__target__("sse4.1"))), apply_to = function)
+#elif defined(__GNUC__)
+#pragma GCC target ("sse4.1")
+#endif
+
 namespace sha256d64_sse41 {
 namespace {
 
@@ -317,4 +323,8 @@ void Transform_4way(unsigned char* out, const unsigned char* in)
 
 }
 
+#if defined(__clang__)
+#pragma clang attribute pop
+#endif
+
 #endif
